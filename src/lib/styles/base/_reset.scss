// stylelint-disable selector-max-id, no-descending-specificity
:root {
  @each $color, $value in $brand-colors {
    --#{$color}: #{$value};
  }
  --gradient-primary: #{$gradient-primary};
}

html,
body,
#___gatsby,
div[role="group"] {
  position: relative;
  max-width: 100vw;
  height: 100%;
  scroll-behavior: smooth;

  @media (prefers-reduced-motion: reduce) {
    scroll-behavior: auto;
  }
}

html {
  &.textSize {
    &--large {
      font-size: 17px;
      @include breakpoint(medium) {
        font-size: 18px;
      }
      @include breakpoint(large) {
        font-size: 20px;
      }
    }
    &--largest {
      font-size: 18px;
      @include breakpoint(medium) {
        font-size: 20px;
      }
      @include breakpoint(large) {
        font-size: 22px;
      }
    }
  }

  &.contrast {
    @each $level, $color-map in $contrast-colors {
      &--#{$level} {
        @each $color, $value in $color-map {
          --#{$color}: #{$value};
        }
      }
    }

    &--high {
      --gradient-primary: #{brand-gradient($cd-green-high-contrast)};

      img,
      svg {
        filter: contrast(120%);
      }
    }

    &--highest {
      --gradient-primary: #{brand-gradient($cd-green-dark-high-contrast)};

      img,
      svg {
        filter: contrast(150%);
      }
    }
  }

  &.desaturate {
    @each $color, $value in $brand-colors {
      --#{$color}: #{desaturate($value, 100%)};
    }
    --gradient-primary: #{brand-gradient(desaturate($cd-green, 100%))};

    img,
    svg {
      filter: saturate(0);
    }

    @each $level, $color-map in $contrast-colors {
      &.contrast--#{$level} {
        @each $color, $value in $color-map {
          --#{$color}: #{desaturate($value, 100%)};
        }
      }
    }

    &.contrast--high {
      --gradient-primary: #{brand-gradient(desaturate($cd-green-high-contrast, 100%))};

      img,
      svg {
        filter: saturate(0) contrast(120%);
      }
    }

    &.contrast--highest {
      --gradient-primary: #{brand-gradient(desaturate($cd-green-dark-high-contrast, 100%))};

      img,
      svg {
        filter: saturate(0) contrast(150%);
      }
    }

  }

  &.noFonts * {
    font-family:
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen-Sans,
      Ubuntu,
      Cantarell,
      "Helvetica Neue",
      sans-serif !important;
  }
}

body {
  overflow-x: hidden;
  font-family: $ff-sans;
}

::selection {
  background: $cd-green-light;
  color: var(--cd-black);
}

[data-whatintent="keyboard"] :focus {
  outline: $cd-green-light auto 5px;
}

img {
  max-width: 100%;
  height: auto;
}

.nowrap {
  white-space: nowrap;
}

.overflow-hidden {
  overflow: hidden;
}

// suppress focus ring on for mouse users
[data-whatintent="mouse"] *:focus {
  outline: none;
}

@media (prefers-reduced-motion: reduce) {
  * {
    transition: none !important;
    animation: none !important;
  }
}
